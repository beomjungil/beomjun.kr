---
import ko from '@content/gadget/ko.json';
import en from '@content/gadget/en.json';
import ja from '@content/gadget/ja.json';
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';
import { i18n } from '@/i18n/utils';

const gadgets = {
  ko,
  en,
  ja,
};
const { language, t } = i18n(Astro.url);
const images = import.meta.glob<{ default: ImageMetadata }>('/content/gadget/images/*.{jpeg,jpg,png,webp}');
---

<section>
  <h2 class="typo-headline-small" id="gadgets">
    {t('gadgets')}
    <span class="opacity-50">{t('gadgetsDescription')}</span>
  </h2>

  <div class="gadget-grid">
    {gadgets[language].map(gadget => (
      <div class="gadget-container">
        <div class="gadget">
          <div class="face left"/>
          <div class="face bottom"/>
          <div class="face front">
            <div
              class="cover"
            >
                <Image width={256} height={256} src={images[gadget.image]()} alt={gadget.title} />
            </div>
          </div>
        </div>
        <div class="info">
          <div class="info-placeholder"/>
          <div class="info-content">
            <h3 class="typo-headline-small">{gadget.title}</h3>
            <p class="typo-headline-small opacity-50">{gadget.manufacturer}</p>
            {gadget.comment && <blockquote class="typo-caption mt-4">“{gadget.comment}”</blockquote>}
          </div>
        </div>
      </div>
    ))}
  </div>
</section>


<style>

  .gadget-grid {
    display: grid;
    gap: 4rem;
    margin-top: 2rem;
  }

  @media (min-width: 768px) {
    .gadget-grid {
      grid-template-columns: repeat(3, 1fr);
    }

    .gadget:hover {
      transform: rotate3d(1,0.1,-0.5,30deg) translate(-4px, 22px);
      box-shadow:
        -8px 5px 15px rgba(0,0,0,0.15),
        inset 0 0 30px rgba(0,0,0,0.05);
    }

    .gadget:hover  {
      z-index: 20;
    }

    .face.bottom,
    .face.left {
      display: block;
    }
  }

  .gadget-container {
    position: relative;
  }

  .gadget {
    position: relative;
    user-select: none;
    perspective: 2000px;
    box-shadow:
      0 5px 15px rgba(0,0,0,0.2),
      inset 0 0 100px rgba(255,255,255,0.2);
    max-width: 25vw;
    transition: all 0.5s cubic-bezier(0.23, 1, 0.32, 1);
    transform-style: preserve-3d;
    aspect-ratio: 1/1;
    width: 100%;
  }

  html.dark .gadget::after {
    background: linear-gradient(
      to right,
      #2a2a2a 0%,
      #333 8%,
      #333 100%
    );
  }

  .cover {
    position: relative;
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
    transform-origin: top;
    backface-visibility: hidden;
    overflow: hidden;
    background-color: #ffffff;
    transition: all 0.5s cubic-bezier(0.23, 1, 0.32, 1);
  }

  .cover:after {
    content: '';
    position: absolute;
    inset: 0;
    background:
      linear-gradient(to right, rgba(255,255,255,0), rgba(255,255,255,0.1) 10%, rgba(255,255,255,0) 30%),
      radial-gradient(
        circle at 25% 25%,
        rgba(255,255,255,0.2),
        rgba(255,255,255,0)
      ),
      linear-gradient(to bottom, rgba(0,0,0,0.0), rgba(0,0,0,0.1));
  }

  html.dark .cover img {
    filter: brightness(0.9);
  }

  .cover img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    padding: 0.5rem;
  }

  .info {
    opacity: 0;
    z-index: -1;
    display: flex;
    justify-content: space-between;
  }

  .info-placeholder, .info-content {
    flex: 1;
  }

  .face {
    inset: 0;
    position: absolute;
  }

  .front {
    width: 100%;
    height: 100%;
    transform: translateZ(4.6875rem);
  }

  .left {
    display: none;
    width: 50%;
    height: 100%;
    transform: rotateY(-90deg) translateZ(38px) translateX(41px);
    background: #e8e8e8;
  }

  .bottom {
    display: none;
    width: 100%;
    height: 50%;
    transform: rotateX(-90deg) translateY(-36px) translateZ(111px);
    background: #e0e0e0;
  }

  html.dark .cover {
    background: #2a2a2a;
    box-shadow:
      1px 1px 3px rgba(0, 0, 0, 0.2);
  }
  html.dark .cover:after {
    content: '';
    position: absolute;
    inset: 0;
    background:
      radial-gradient(
        circle at 25% 25%,
        rgba(255,255,255,0.1),
        rgba(255,255,255,0)
      ),
      linear-gradient(to bottom, rgba(0,0,0,0.0), rgba(0,0,0,0.05));
  }

  html.dark .face.left {
    background: #252525;
  }

  html.dark .face.bottom {
    background: #222222;
  }

  @media (min-width: 768px) {
    .info {
      position: absolute;
      left: -2rem;
      top: -2rem;
      bottom: -2rem;
      width: 25rem;
      padding: 1rem;
      opacity: 0;
      transition: opacity 0.25s ease, transform 0.3s ease;
      transform: scale(0.95);
      background: rgba(255,255,255,0.8);
      backdrop-filter: blur(10px);
      box-shadow: 0 4px 12px rgba(0,0,0,0.1);
      border-radius: 8px;
    }

    html.dark .info {
      background: rgba(50, 50, 50, 0.8);
    }

    .info-content {
      padding: 1.5rem 0.5rem 1.5rem 1.5rem;
      flex: 1;
      display: flex;
      flex-direction: column;
    }
    .gadget-container:nth-child(3n) .info {
      left: auto;
      right: -2rem;
    }

    .gadget-container:nth-child(3n) .info-placeholder {
      order: 2;
    }

    .gadget-container:nth-child(3n) .info-content {
      padding: 1.5rem 1.5rem 1.5rem 0;
    }

    .gadget:hover + .info {
      opacity: 1;
      z-index: 10;
      transform: scale(1);
    }
  }

  @media (max-width: 767px) {
    .gadget-container {
      display: flex;
      align-items: flex-start;
      gap: 1rem;
    }

    .info {
      display: block;
      flex: 1;
      opacity: 1;
    }
  }
</style>
